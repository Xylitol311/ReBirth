version: '3'

services:
  # nginx 리버스 프록시
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
    # EC2 내부 디렉토리의 nginx 설정 파일을 마운트 (FE 폴더는 포함되지 않음)
    volumes:
      - /home/ubuntu/nginx-conf:/etc/nginx/conf.d
    depends_on:
      - rebirth
      - cardissuer
    networks:
      - app-network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  # rebirth 서비스 (Spring Boot 애플리케이션)
  rebirth:
    image: rebirth-image
    container_name: rebirth_app
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8081:8080"   # 호스트 포트 8081 → 컨테이너 포트 8080
    depends_on:
      - postgres
    networks:
      - app-network

  # cardissuer 서비스 (또 다른 Spring Boot 애플리케이션)
  cardissuer:
    image: cardissuer-image
    container_name: cardissuer_app
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8082:8080"   # 호스트 포트 8082 → 컨테이너 포트 8080
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  jenkins_home:
  pgdata: